version: '3.8'

services:
  # PostgreSQL数据库
  postgres:
    image: postgres:15
    container_name: llm-gateway-postgres
    environment:
      POSTGRES_DB: llm_gateway
      POSTGRES_USER: gateway_user
      POSTGRES_PASSWORD: gateway_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - llm-gateway-network

  # ETCD配置存储
  etcd:
    image: quay.io/coreos/etcd:v3.5.10
    container_name: llm-gateway-etcd
    command:
      - etcd
      - --name=etcd0
      - --data-dir=/etcd-data
      - --listen-client-urls=http://0.0.0.0:2379
      - --advertise-client-urls=http://0.0.0.0:2379
      - --listen-peer-urls=http://0.0.0.0:2380
      - --initial-advertise-peer-urls=http://0.0.0.0:2380
      - --initial-cluster=etcd0=http://0.0.0.0:2380
      - --initial-cluster-token=tkn
      - --initial-cluster-state=new
      - --log-level=info
      - --logger=zap
      - --log-outputs=stderr
    ports:
      - "2379:2379"
      - "2380:2380"
    volumes:
      - etcd_data:/etcd-data
    networks:
      - llm-gateway-network

  # Kafka消息队列
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: llm-gateway-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - llm-gateway-network

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: llm-gateway-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - llm-gateway-network

  # Prometheus监控
  prometheus:
    image: prom/prometheus:v2.47.0
    container_name: llm-gateway-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
      - --web.console.libraries=/etc/prometheus/console_libraries
      - --web.console.templates=/etc/prometheus/consoles
      - --storage.tsdb.retention.time=200h
      - --web.enable-lifecycle
    networks:
      - llm-gateway-network

  # Grafana可视化
  grafana:
    image: grafana/grafana:10.1.0
    container_name: llm-gateway-grafana
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin123
      GF_USERS_ALLOW_SIGN_UP: false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
    networks:
      - llm-gateway-network

  # LLM-Aware Gateway
  gateway:
    build: .
    container_name: llm-gateway
    depends_on:
      - postgres
      - etcd
      - kafka
    ports:
      - "8080:8080"
    environment:
      - SERVER_HOST=0.0.0.0
      - SERVER_PORT=8080
      - ETCD_ENDPOINTS=etcd:2379
      - KAFKA_BROKERS=kafka:9092
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=gateway_user
      - POSTGRES_PASSWORD=gateway_password
      - POSTGRES_DATABASE=llm_gateway
    volumes:
      - ./configs/gateway.yaml:/root/configs/gateway.yaml:ro
    networks:
      - llm-gateway-network
    restart: unless-stopped

  # 模拟下游服务（用于测试）
  mock-service:
    image: nginx:alpine
    container_name: mock-service
    ports:
      - "8081:80"
    volumes:
      - ./test/mock-service:/usr/share/nginx/html:ro
    networks:
      - llm-gateway-network

volumes:
  postgres_data:
  etcd_data:
  prometheus_data:
  grafana_data:

networks:
  llm-gateway-network:
    driver: bridge
